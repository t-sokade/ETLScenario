{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json#",
    "contentVersion": "0.9.0.0",
    "parameters": {
        "sparkClusterLoginUserName": {
            "type": "string",
            "defaultValue": "admin",
            "metadata": {
                "description": "These credentials can be used to submit jobs to the cluster and to log into cluster dashboards."
            }
        },
        "sparkClusterLoginPassword": {
            "type": "securestring",
            "defaultValue": "Thisisapassword1",
            "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "sparkClusterVersion": {
            "type": "string",
            "defaultValue": "4.0",
            "metadata": {
                "description": "HDInsight cluster version."
            }
        },
        "sparkClusterWorkerNodeCount": {
            "type": "int",
            "defaultValue": 4,
            "metadata": {
                "description": "The number of nodes in the HDInsight cluster."
            }
        },
        "sparkClusterKind": {
            "type": "string",
            "defaultValue": "SPARK",
            "metadata": {
                "description": "The type of the HDInsight cluster to create."
            }
        },
        "sparksshUserName": {
            "type": "string",
            "defaultValue": "sshuser",
            "metadata": {
                "description": "These credentials can be used to remotely access the cluster."
            }
        },
        "sparksshPassword": {
            "type": "securestring",
            "defaultValue": "Thisisapassword1",
            "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "llapClusterLoginUserName": {
            "type": "string",
            "defaultValue": "admin",
            "metadata": {
                "description": "These credentials can be used to submit jobs to the cluster and to log into cluster dashboards."
            }
        },
        "llapClusterLoginPassword": {
            "type": "securestring",
            "defaultValue": "Thisisapassword1",
            "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "llapclusterVersion": {
            "type": "string",
            "defaultValue": "3.6",
            "metadata": {
                "description": "HDInsight cluster version."
            }
        },
        "llapclusterWorkerNodeCount": {
            "type": "int",
            "defaultValue": 4,
            "metadata": {
                "description": "The number of nodes in the HDInsight cluster."
            }
        },
        "llapclusterKind": {
            "type": "string",
            "defaultValue": "INTERACTIVEHIVE",
            "metadata": {
                "description": "The type of the HDInsight cluster to create."
            }
        },
        "llapsshUserName": {
            "type": "string",
            "defaultValue": "sshuser",
            "metadata": {
                "description": "These credentials can be used to remotely access the cluster."
            }
        },
        "llapsshPassword": {
            "type": "securestring",
            "defaultValue": "Thisisapassword1",
            "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "roleNameGuid": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
              "description": "A new GUID used to identify the role assignment"
            }
          }
    },
    "variables": {
        "blobStorageName": "[concat('blob', uniqueString(resourceGroup().id))]",
        "ADLSGen2storageName": "[concat('adlsgen2', uniqueString(resourceGroup().id))]",
        "sparkClusterName": "[concat('spark-', uniqueString(resourceGroup().id))]",
        "llapClusterName": "[concat('llap-', uniqueString(resourceGroup().id))]",
        "managedIdentityName": "[concat('mi-', uniqueString(resourceGroup().id))]",
        "identityResourceId": "[concat(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), '/providers/Microsoft.ManagedIdentity/Identities/default')]",
        "storageBlobOwner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
        "networkSecurityGroup": {
            "name": "[concat('nsg-', uniqueString(resourceGroup().id))]"
        },
        "vNet": {
            "name": "[concat('vnet-', uniqueString(resourceGroup().id))]",
            "addressSpacePrefix": "10.0.0.0/16",
            "subnetName": "subnet1",
            "subnetPrefix": "10.0.0.0/24",
            "id": "[resourceId('Microsoft.Network/virtualNetworks', concat('vnet-', uniqueString(resourceGroup().id)))]",
            "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks', concat('vnet-', uniqueString(resourceGroup().id))), '/subnets/subnet1')]"
          }
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[variables('managedIdentityName')]",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroup').name]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2017-06-01",
            "properties": {
              "securityRules": [
                {
                  "name": "Allow_HDInsight_Management_Traffic",
                  "properties": {
                    "description": "Allow traffic from the Azure health and management services to reach HDInsight",
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "443",
                    "sourceAddressPrefixes": ["168.61.49.99", "23.99.5.239", "168.61.48.131", "138.91.141.162"],
                    "destinationAddressPrefix": "VirtualNetwork",
                    "access": "Allow",
                    "priority": 300,
                    "direction": "Inbound"
                  }
                },
                {
                  "name": "Allow_Azure_Resolver_Traffic",
                  "properties": {
                    "description": "Allow access from Azure's recursive resolver",
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "443",
                    "sourceAddressPrefix": "168.63.129.16",
                    "destinationAddressPrefix": "VirtualNetwork",
                    "access": "Allow",
                    "priority": 301,
                    "direction": "Inbound"
                  }
                },
                {
                  "name": "Allow_HDInsight_Management_Traffic_Regional",
                  "properties": {
                    "description": "Adapt this rule based on the region where you are deploying HDInsight, or remove the rule if your region is not listed.",
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "443",
                    "sourceAddressPrefixes": ["23.102.235.122", "52.175.38.134", "13.76.245.160", "13.76.136.249", "104.210.84.115", "13.75.152.195", "13.77.2.56", "13.77.2.94", "191.235.84.104", "191.235.87.113", "52.229.127.96", "52.229.123.172", "52.228.37.66", "52.228.45.222", "42.159.96.170", "139.217.2.219", "42.159.198.178", "42.159.234.157", "40.73.37.141", "40.73.38.172", "52.164.210.96", "13.74.153.132", "52.166.243.90", "52.174.36.244", "51.4.146.68", "51.4.146.80", "51.5.150.132", "51.5.144.101", "52.172.153.209", "52.172.152.49", "104.211.223.67", "104.211.216.210", "13.78.125.90", "13.78.89.60", "40.74.125.69", "138.91.29.150", "52.231.39.142", "52.231.36.209", "52.231.203.16", "52.231.205.214", "51.141.13.110", "51.141.7.20", "51.140.47.39", "51.140.52.16", "13.67.223.215", "40.86.83.253", "13.82.225.233", "40.71.175.99", "157.56.8.38", "157.55.213.99", "52.161.23.15", "52.161.10.167", "13.64.254.98", "23.101.196.19", "52.175.211.210", "52.175.222.222"],
                    "destinationAddressPrefix": "VirtualNetwork",
                    "access": "Allow",
                    "priority": 302,
                    "direction": "Inbound"
                  }
                }
              ]
            }
          },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[variables('blobStorageName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "dependsOn": [
                "[variables('managedIdentityName')]"
            ],
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(variables('blobStorageName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts',  variables('blobStorageName'))]",
                "[variables('managedIdentityName')]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(variables('blobStorageName'), '/default/rawdata')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('blobStorageName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts',  variables('blobStorageName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('ADLSGen2storageName')]",
            "apiVersion": "2019-04-01",
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]"
            ],
            "properties": {
                "isHnsEnabled": true,
                "accountType": "Standard_LRS",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            },
            "resources" : [
                {
                    "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
                    "apiVersion": "2018-09-01-preview",
                    "name": "[concat(variables('ADLSGen2storageName'), '/Microsoft.Authorization/', parameters('roleNameGuid'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('ADLSGen2storageName'))]",
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]"
                    ],
                    "properties": {
                        "roleDefinitionId": "[variables('storageBlobOwner')]",
                        "principalId": "[reference(variables('identityResourceId'), '2018-11-30').principalId]",
                        "principalType": "ServicePrincipal"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(variables('ADLSGen2storageName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('ADLSGen2storageName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vNet').name]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroup').name)]"
              ],
            "properties": {
              "addressSpace": {
                "addressPrefixes": [
                  "[variables('vNet').addressSpacePrefix]"
                ]
              },
              "subnets": [
                {
                  "name": "[variables('vNet').subnetName]",
                  "properties": {
                    "addressPrefix": "[variables('vNet').subnetPrefix]"
                  }
                }
              ]
            }
          },
        {
            "apiVersion": "2015-03-01-preview",
            "name": "[variables('sparkClusterName')]",
            "type": "Microsoft.HDInsight/clusters",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('vNet').name)]",
                "[concat('Microsoft.Storage/storageAccounts/',variables('ADLSGen2storageName'))]",
                "[variables('managedIdentityName')]"
            ],
            "properties": {
                "clusterVersion": "[parameters('sparkClusterVersion')]",
                "osType": "Linux",
                "tier": "standard",
                "clusterDefinition": {
                    "kind": "[parameters('sparkClusterKind')]",
                    "componentVersion": {
                        "Spark": "2.3"
                    },
                    "configurations": {
                        "gateway": {
                            "restAuthCredential.isEnabled": true,
                            "restAuthCredential.username": "[parameters('sparkClusterLoginUserName')]",
                            "restAuthCredential.password": "[parameters('sparkClusterLoginPassword')]"
                        }
                    }
                },
                "storageProfile": {
                    "storageaccounts": [
                        {
                            "name": "[concat(variables('ADLSGen2storageName'), '.dfs.core.windows.net')]",
                            "isDefault": true,
                            "fileSystem": "[concat(variables('sparkClusterName'), '-2019-01-23t20-00-14-186z')]",
                            "resourceID": "[concat(resourceGroup().id, '/providers/Microsoft.Storage/storageAccounts/', variables('ADLSGen2storageName'))]",
                            "msiResourceId": "[concat(resourceGroup().id, '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', variables('managedIdentityName'))]"
                        }
                    ]
                },
                "computeProfile": {
                    "roles": [
                        {
                            "autoscale": null,
                            "name": "headnode",
                            "minInstanceCount": 1,
                            "targetInstanceCount": 2,
                            "hardwareProfile": {
                                "vmSize": "Standard_D12_V2"
                            },
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "username": "[parameters('sparksshUserName')]",
                                    "password": "[parameters('sparksshPassword')]"
                                }
                            },
                            "virtualNetworkProfile": {
                                "id": "[variables('vNet').id]",
                                "subnet": "[variables('vNet').subnet]"
                            },
                            "scriptActions": []
                        },
                        {
                            "autoscale": null,
                            "name": "workernode",
                            "targetInstanceCount": 4,
                            "hardwareProfile": {
                                "vmSize": "Standard_D13_V2"
                            },
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "username": "[parameters('sparksshUserName')]",
                                    "password": "[parameters('sparksshPassword')]"
                                }
                            },
                            "virtualNetworkProfile": {
                                "id": "[variables('vNet').id]",
                                "subnet": "[variables('vNet').subnet]"
                            },
                            "scriptActions": []
                        }
                    ]
                }
            },
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[concat(resourceGroup().id, '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', variables('managedIdentityName'))]": {}
                }
            }
        },
        {
            "apiVersion": "2018-06-01-preview",
            "name": "[variables('llapclusterName')]",
            "type": "Microsoft.HDInsight/clusters",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('vNet').name)]",
                "[concat('Microsoft.Storage/storageAccounts/',variables('ADLSGen2storageName'))]",
                "[variables('managedIdentityName')]"
            ],
            "properties": {
                "clusterVersion": "[parameters('llapclusterVersion')]",
                "osType": "Linux",
                "tier": "standard",
                "clusterDefinition": {
                    "kind": "[parameters('llapclusterKind')]",
                    "componentVersion": {
                        "InteractiveHive": "2.1"
                    },
                    "configurations": {
                        "gateway": {
                            "restAuthCredential.isEnabled": true,
                            "restAuthCredential.username": "[parameters('llapClusterLoginUserName')]",
                            "restAuthCredential.password": "[parameters('llapClusterLoginPassword')]"
                        }
                    }
                },
                "storageProfile": {
                    "storageaccounts": [
                        {
                            "name": "[concat(variables('ADLSGen2storageName'), '.dfs.core.windows.net')]",
                            "isDefault": true,
                            "fileSystem": "[concat(variables('llapClusterName'), '-2019-01-23t20-00-14-186z')]",
                            "resourceID": "[concat(resourceGroup().id, '/providers/Microsoft.Storage/storageAccounts/', variables('ADLSGen2storageName'))]",
                            "msiResourceId": "[concat(resourceGroup().id, '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', variables('managedIdentityName'))]"
                        }
                    ]
                },
                "computeProfile": {
                    "roles": [
                        {
                            "autoscale": null,
                            "name": "headnode",
                            "minInstanceCount": 1,
                            "targetInstanceCount": 2,
                            "hardwareProfile": {
                                "vmSize": "Standard_D13_V2"
                            },
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "username": "[parameters('llapsshUserName')]",
                                    "password": "[parameters('llapsshPassword')]"
                                }
                            },
                            "virtualNetworkProfile": { 
                                "id": "[variables('vNet').id]",
                                "subnet": "[variables('vNet').subnet]"
                            },
                            "scriptActions": []
                        },
                        {
                            "autoscale": null,
                            "name": "workernode",
                            "targetInstanceCount": 4,
                            "hardwareProfile": {
                                "vmSize": "Standard_D13_V2"
                            },
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "username": "[parameters('llapsshUserName')]",
                                    "password": "[parameters('llapsshPassword')]"
                                }
                            },
                            "virtualNetworkProfile": {
                                "id": "[variables('vNet').id]",
                                "subnet": "[variables('vNet').subnet]"
                            },
                            "scriptActions": []
                        }
                    ]
                }
            },
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[concat(resourceGroup().id, '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', variables('managedIdentityName'))]": {}
                }
            }
        }
    ]
}